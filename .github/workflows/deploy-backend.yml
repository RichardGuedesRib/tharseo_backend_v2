name: CI Main -> Deploy Render

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      CI: true
      DATABASE_URL: postgres://postgres:root@localhost:5432/test_db
      NODE_ENV: test

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Instalar depend√™ncias
        run: npm ci

      - name: Subir Postgres manualmente
        run: |
          docker run -d \
            --name postgres-test \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=root \
            -e POSTGRES_DB=test_db \
            -p 5432:5432 \
            postgres:15

      - name: Esperar Postgres estar dispon√≠vel
        run: |
          echo "Aguardando Postgres iniciar..."
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            echo "Tentativa $i: Postgres ainda n√£o est√° dispon√≠vel"
            sleep 2
          done

      - name: Gerar Prisma Client
        run: npx prisma generate

      - name: Rodar migrations no banco de teste
        run: npx prisma db push

      - name: Rodar testes unit√°rios
        run: npm run test

      - name: Verificar tabelas no banco de dados
        run: |
        psql -h localhost -U postgres -d test_db -c '\dt'

      - name: Rodar testes e2e
        run: npm run test:e2e

      - name: Disparar deploy Render
        if: success()
        env:
          TRIGGER_DEPLOY: ${{ secrets.TRIGGER_DEPLOY }}
        run: |
          echo "üöÄ Deploy acionado via trigger do Render"
          curl -X GET "$TRIGGER_DEPLOY"
